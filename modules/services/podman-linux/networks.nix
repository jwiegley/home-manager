{ config, lib, ... }:

with lib;

let
  podman-lib = import ./podman-lib.nix { inherit lib; };
  
  createQuadletSource = name: networkDef:
    ''
      # Automatically generated by home-manager for podman network configuration
      # DO NOT EDIT THIS FILE DIRECTLY
      [Network]
      ${podman-lib.formatExtraConfig networkDef}

      [Install]
      WantedBy=multi-user.target default.target
    '';

  toQuadletInternal = name: networkDef:
    {
      serviceName = "podman-${name}"; # becomes podman-<netname>-network.service because of quadlet
      source = createQuadletSource name networkDef;
      unitType = "network";
    };

in
{
  options = {
    services.podman.networks = mkOption {
      type = types.attrsOf (podman-lib.primitiveAttrs);
      default = {};
      example = literalExample ''
        {
          mynetwork = {
            Subnet = "192.168.1.0/24";
            Gateway = "192.168.1.1";
            NetworkName = "mynetwork";
          };
        }
      '';
      description = "Defines Podman network quadlet configurations.";
    };
  };

  config = {
    internal.podman-quadlet-definitions = mapAttrsToList toQuadletInternal config.services.podman.networks;
  };
}
